from sklearn.datasets import load_digits 
from sklearn.model_selection import train_test_split 
from sklearn.naive_bayes import GaussianNB 
from sklearn.metrics import accuracy_score 
import matplotlib.pyplot as plt 
digits = load_digits() 
X = digits.data      
y = digits.target    # The digit labels (0 to 9) 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) 
model = GaussianNB() 
model.fit(X_train, y_train) 
y_pred = model.predict(X_test) 
accuracy = accuracy_score(y_test, y_pred) 
print(f"Accuracy: {accuracy * 100:.2f}%") 
plt.figure(figsize=(10, 4)) 
for index, (image, prediction) in enumerate(zip(X_test[:5], y_pred[:5])): 
  plt.subplot(1, 5, index + 1) 
  plt.imshow(image.reshape(8, 8), cmap='gray')
  plt.title(f'Pred: {prediction}') 
  plt.axis('off') 
plt.tight_layout() 
plt.show()  
